#include "classes.h"


using namespace std;
 

card::card()				// constructor
{
       suit = "suit";
	rank = "rank";
	location = "location";

}

card::card( const card& t ){      // copy  constructor 
	suit = t.suit;
	rank = t.rank;
	location = t.location;
}

card::~card()
{	


}


void card::setsuit( string nsuit){
	suit = nsuit;
}

void card::setrank( string nrank){
	rank = nrank;
}

void card::setlocation( string nlocation){
	location = nlocation;
}

/*void card::cardcopy( card *source ){
	strcpy( suit, (*source).suit );
	strcpy( rank, (*source).rank );
}*/

void card::getsuit()
{
	return suit;
}

void card::getrank()
{
	return rank;
}

void card::getlocation()
{
	return location;
}

ostream& operator<<(ostream& out, card& print)
{

 out << "suit " << print.suit << "rank " << print.rank << "location" << print.location;

 return out;
}

ifstream& operator>>(ifstream& in, card& print)
{

in >> print.suit >> print.rank >> print.location;

if(value == "one"){
	print.value = 1;
}
	else if(value == "two"){
	print.value = 2;
}
	else if(value == "three"){
	print.value = 3;
}
	else if(value == "four"){
	print.value = 4;
}
	else if(value == "five")
{
	print.value = 5;
}
	else if(value == "six")
{
	print.value = 6;
}
	else if(value == "seven")
{
	print.value = 7;
}
	else if(value == "eight")
{
	print.value = 8;
} 
	else if(value == "nine")
{
	print.value = 9;
}
	else{
	card.value = 10;
}
return in;

}


player::player(){
	name = new char[20];
	strcpy( name, "first last" );
	bet = 0.0;
	hand = new card[5];
}

player::~player(){

	delete[]hand;
	hand = NULL;
}

void player::setname( string nname ){
	name = nname; 
}

void player::setbet( float nbet ){
	bet = nbet;
}

void player::sethand( card* nhand ){
	(*hand).cardcopy( nhand );
}

char* player::getname() const
{
	return name;
}

float player::getbet()  const
{
	return bet;
}

card* player::gethand() const
{
	return hand;
}

/*void player::printplayer()
{
	cout << endl << name << endl;

	for( int i = 0; i < 5; i++ ){
		hand[i].printcard(); 
	}

}*/
